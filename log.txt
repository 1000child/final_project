Thu Jul 20 12:18:49 2017
Windows-8-6.2.9200
Ren'Py 6.99.12.4.2187
 

Bootstrap to the start of init.init took 0.49s
Early init took 0.11s
Loader init took 0.50s
Loading error handling took 0.17s
Loading script took 4.46s
Loading persistent took 0.13s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.66s
Loading analysis data took 0.14s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.35s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.20s
Cleaning stores took 0.00s
Init translation took 0.21s
Build styles took 0.02s
Load screen analysis took 0.00s
Analyze screens took 0.05s
Save screen analysis took 0.25s
Prepare screens took 0.27s
Save pyanalysis. took 0.00s
Save bytecode. took 0.18s
Running _start took 0.01s
Performance test:
Interface start took 0.04s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 10.2059998512s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.070000 seconds.
- Frame drawn at 0.102000 seconds.
- Frame drawn at 0.117000 seconds.
- Frame drawn at 0.134000 seconds.
- 0.134000 seconds to render 5 frames.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 593, in execute
    who = eval_who(self.who, self.who_fast)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 509, in eval_who
    raise Exception("Sayer '%s' is not defined." % who.encode("utf-8"))
Exception: Sayer 'naration' is not defined.
Bootstrap to the start of init.init took 72.07s
Early init took 0.01s
Loader init took 0.23s
Loading error handling took 0.10s
Loading script took 4.58s
Loading persistent took 0.10s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.18s
Loading analysis data took 0.03s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.17s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.18s
Build styles took 0.02s
Load screen analysis took 0.00s
Analyze screens took 0.04s
Save screen analysis took 0.15s
Prepare screens took 0.14s
Save pyanalysis. took 0.00s
Save bytecode. took 0.10s
Running _start took 0.01s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 78.9699997902s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.028000 seconds.
- Frame drawn at 0.046000 seconds.
- Frame drawn at 0.058000 seconds.
- Frame drawn at 0.072000 seconds.
- 0.072000 seconds to render 5 frames.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 1706, in execute
    self.call("execute")
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 1724, in call
    return renpy.statements.call(method, parsed, *args, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\statements.py", line 145, in call
    return method(parsed, *args, **kwargs)
  File "renpy/common/000statements.rpy", line 115, in execute_play_music
    if_changed=p.get("if_changed", False))
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\audio\music.py", line 87, in play
    c = get_channel(channel)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\audio\audio.py", line 740, in get_channel
    raise Exception("Audio channel %r is unknown." % name)
Exception: Audio channel u'soud' is unknown.
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Bootstrap to the start of init.init took 131.70s
Early init took 0.01s
Loader init took 0.19s
Loading error handling took 0.08s
Loading script took 3.57s
Loading persistent took 0.10s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.38s
Loading analysis data took 0.06s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.21s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.14s
Build styles took 0.02s
Load screen analysis took 0.00s
Analyze screens took 0.04s
Save screen analysis took 0.17s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.09s
Running _start took 0.00s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Ignored error at start of testing: 501
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 137.747999907s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.027000 seconds.
- Frame drawn at 0.073000 seconds.
- Frame drawn at 0.090000 seconds.
- Frame drawn at 0.106000 seconds.
- 0.106000 seconds to render 5 frames.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 613, in execute
    renpy.exports.say(who, what, interact=self.interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\exports.py", line 1147, in say
    who(what, interact=interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 877, in __call__
    self.do_display(who, what, cb_args=self.cb_args, **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 716, in do_display
    **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 508, in display_say
    rv = renpy.ui.interact(mouse='say', type=type, roll_forward=roll_forward)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ui.py", line 285, in interact
    rv = renpy.game.interface.interact(roll_forward=roll_forward, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2526, in interact
    repeat, rv = self.interact_core(preloads=preloads, trans_pause=trans_pause, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2883, in interact_core
    self.draw_screen(root_widget, fullscreen_video, (not fullscreen_video) or video_frame_drawn)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1955, in draw_screen
    renpy.config.screen_height,
  File "renpy/display/render.pyx", line 427, in renpy.display.render.render_screen (gen\renpy.display.render.c:6806)
    rv = render(root, width, height, 0, 0)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\screen.py", line 623, in render
    child = renpy.display.render.render(self.child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "renpy/display/accelerator.pyx", line 108, in renpy.display.accelerator.transform_render (gen\renpy.display.accelerator.c:2027)
    cr = render(child, widtho, heighto, st - self.child_st_base, at)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 387, in render
    return wrap_render(self.target, width, height, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 208, in wrap_render
    rend = render(child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 473, in render
    im = cache.get(self)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 200, in get
    surf = image.load()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 524, in load
    surf = renpy.display.pgrender.load_image(renpy.loader.load(self.filename), self.filename)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\loader.py", line 543, in load
    raise IOError("Couldn't find file '%s'." % name)
IOError: Couldn't find file 'characters/iris/side/side_dizzy confused.png'.
Bootstrap to the start of init.init took 157.64s
Early init took 0.01s
Loader init took 0.18s
Loading error handling took 0.09s
Loading script took 0.47s
Loading persistent took 0.10s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.22s
Loading analysis data took 0.11s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Dump and make backups. took 0.16s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.14s
Build styles took 0.01s
Load screen analysis took 0.04s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.13s
Save pyanalysis. took 0.00s
Save bytecode. took 0.00s
Running _start took 0.00s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 160.058999777s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.046000 seconds.
- Frame drawn at 0.076000 seconds.
- Frame drawn at 0.090000 seconds.
- Frame drawn at 0.104000 seconds.
- 0.104000 seconds to render 5 frames.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 613, in execute
    renpy.exports.say(who, what, interact=self.interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\exports.py", line 1147, in say
    who(what, interact=interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 877, in __call__
    self.do_display(who, what, cb_args=self.cb_args, **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 716, in do_display
    **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 508, in display_say
    rv = renpy.ui.interact(mouse='say', type=type, roll_forward=roll_forward)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ui.py", line 285, in interact
    rv = renpy.game.interface.interact(roll_forward=roll_forward, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2526, in interact
    repeat, rv = self.interact_core(preloads=preloads, trans_pause=trans_pause, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2883, in interact_core
    self.draw_screen(root_widget, fullscreen_video, (not fullscreen_video) or video_frame_drawn)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1955, in draw_screen
    renpy.config.screen_height,
  File "renpy/display/render.pyx", line 427, in renpy.display.render.render_screen (gen\renpy.display.render.c:6806)
    rv = render(root, width, height, 0, 0)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\screen.py", line 623, in render
    child = renpy.display.render.render(self.child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "renpy/display/accelerator.pyx", line 108, in renpy.display.accelerator.transform_render (gen\renpy.display.accelerator.c:2027)
    cr = render(child, widtho, heighto, st - self.child_st_base, at)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 387, in render
    return wrap_render(self.target, width, height, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 208, in wrap_render
    rend = render(child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 473, in render
    im = cache.get(self)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 200, in get
    surf = image.load()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 524, in load
    surf = renpy.display.pgrender.load_image(renpy.loader.load(self.filename), self.filename)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\loader.py", line 543, in load
    raise IOError("Couldn't find file '%s'." % name)
IOError: Couldn't find file 'characters/iris/side/side_dizzy confused.png'.
Bootstrap to the start of init.init took 254.47s
Early init took 0.01s
Loader init took 0.70s
Loading error handling took 0.09s
Loading script took 0.69s
Loading persistent took 0.10s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.20s
Loading analysis data took 0.11s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Dump and make backups. took 0.15s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.11s
Build styles took 0.01s
Load screen analysis took 0.04s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.00s
Running _start took 0.00s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 257.703999996s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.098000 seconds.
- Frame drawn at 0.155000 seconds.
- Frame drawn at 0.169000 seconds.
- Frame drawn at 0.186000 seconds.
- 0.186000 seconds to render 5 frames.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 1268, in execute
    trans = renpy.python.py_eval(self.expr)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 1749, in py_eval
    return py_eval_bytecode(code, globals, locals)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 1743, in py_eval_bytecode
    return eval(bytecode, globals, locals)
  File "game/script.rpy", line 1917, in <module>
    with vpunch(1.)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\curry.py", line 38, in __call__
    **dict(self.kwargs.items() + kwargs.items()))
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\motion.py", line 304, in Move
    **properties)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\motion.py", line 98, in __init__
    self.add(child)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 160, in add
    child = renpy.easy.displayable(d)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\easy.py", line 108, in displayable
    raise Exception("Not a displayable: %r" % (d,))
Exception: Not a displayable: 1.0
Bootstrap to the start of init.init took 463.79s
Early init took 0.00s
Loader init took 0.23s
Loading error handling took 0.07s
Loading script took 3.75s
Loading persistent took 0.17s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.37s
Loading analysis data took 0.07s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.34s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.25s
Build styles took 0.02s
Load screen analysis took 0.00s
Analyze screens took 0.04s
Save screen analysis took 0.32s
Prepare screens took 0.27s
Save pyanalysis. took 0.00s
Save bytecode. took 0.15s
Running _start took 0.01s
Performance test:
Interface start took 0.03s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 470.92599988s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.053000 seconds.
- Frame drawn at 0.097000 seconds.
- Frame drawn at 0.106000 seconds.
- Frame drawn at 0.120000 seconds.
- 0.120000 seconds to render 5 frames.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 1275, in execute
    renpy.exports.with_statement(trans, paired)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\exports.py", line 1381, in with_statement
    return renpy.game.interface.do_with(trans, paired, clear=clear)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2096, in do_with
    clear=clear)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2526, in interact
    repeat, rv = self.interact_core(preloads=preloads, trans_pause=trans_pause, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2883, in interact_core
    self.draw_screen(root_widget, fullscreen_video, (not fullscreen_video) or video_frame_drawn)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1955, in draw_screen
    renpy.config.screen_height,
  File "renpy/display/render.pyx", line 427, in renpy.display.render.render_screen (gen\renpy.display.render.c:6806)
    rv = render(root, width, height, 0, 0)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\motion.py", line 177, in render
    child = render(self.child, width, height, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "renpy/display/accelerator.pyx", line 108, in renpy.display.accelerator.transform_render (gen\renpy.display.accelerator.c:2027)
    cr = render(child, widtho, heighto, st - self.child_st_base, at)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 387, in render
    return wrap_render(self.target, width, height, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 208, in wrap_render
    rend = render(child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 473, in render
    im = cache.get(self)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 200, in get
    surf = image.load()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 524, in load
    surf = renpy.display.pgrender.load_image(renpy.loader.load(self.filename), self.filename)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\loader.py", line 543, in load
    raise IOError("Couldn't find file '%s'." % name)
IOError: Couldn't find file 'characters/iris/dizzy confused.png'.
Bootstrap to the start of init.init took 515.34s
Early init took 0.00s
Loader init took 0.22s
Loading error handling took 0.10s
Loading script took 0.63s
Loading persistent took 0.09s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.20s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Dump and make backups. took 0.14s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.01s
Load screen analysis took 0.02s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.09s
Save pyanalysis. took 0.00s
Save bytecode. took 0.00s
Running _start took 0.00s
Performance test:
Interface start took 0.01s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 517.887999773s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.087000 seconds.
- Frame drawn at 0.164000 seconds.
- Frame drawn at 0.188000 seconds.
- Frame drawn at 0.205000 seconds.
- 0.205000 seconds to render 5 frames.
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 1271, in execute
    paired = renpy.python.py_eval(self.paired)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 1749, in py_eval
    return py_eval_bytecode(code, globals, locals)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 1743, in py_eval_bytecode
    return eval(bytecode, globals, locals)
  File "game/script.rpy", line 2164, in <module>
    show friend3shock with hpunck(1.)
NameError: name 'hpunck' is not defined
Bootstrap to the start of init.init took 991.12s
Early init took 0.01s
Loader init took 0.43s
Loading error handling took 0.11s
Loading script took 3.77s
Loading persistent took 0.08s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.30s
Loading analysis data took 0.06s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.23s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.14s
Build styles took 0.02s
Load screen analysis took 0.00s
Analyze screens took 0.03s
Save screen analysis took 0.14s
Prepare screens took 0.25s
Save pyanalysis. took 0.00s
Save bytecode. took 0.09s
Running _start took 0.01s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Ignored error at start of testing: 501
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 997.650999784s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.028000 seconds.
- Frame drawn at 0.059000 seconds.
- Frame drawn at 0.074000 seconds.
- Frame drawn at 0.092000 seconds.
- 0.092000 seconds to render 5 frames.
Cleaning stores took 0.00s
Init translation took 0.96s
Build styles took 0.08s
Load screen analysis took 0.08s
Analyze screens took 0.00s
Prepare screens took 0.00s
Running _start took 0.01s
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 613, in execute
    renpy.exports.say(who, what, interact=self.interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\exports.py", line 1147, in say
    who(what, interact=interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 877, in __call__
    self.do_display(who, what, cb_args=self.cb_args, **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 716, in do_display
    **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 508, in display_say
    rv = renpy.ui.interact(mouse='say', type=type, roll_forward=roll_forward)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ui.py", line 285, in interact
    rv = renpy.game.interface.interact(roll_forward=roll_forward, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2526, in interact
    repeat, rv = self.interact_core(preloads=preloads, trans_pause=trans_pause, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2883, in interact_core
    self.draw_screen(root_widget, fullscreen_video, (not fullscreen_video) or video_frame_drawn)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1955, in draw_screen
    renpy.config.screen_height,
  File "renpy/display/render.pyx", line 427, in renpy.display.render.render_screen (gen\renpy.display.render.c:6806)
    rv = render(root, width, height, 0, 0)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\screen.py", line 623, in render
    child = renpy.display.render.render(self.child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 1081, in render
    st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 1081, in render
    st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 158, in renpy.display.render.render (gen\renpy.display.render.c:2475)
    xmaximum = style.xmaximum
  File "module/gen/styleclass.pxi", line 397, in renpy.styledata.styleclass.Style.xmaximum.__get__ (gen\renpy.styledata.styleclass.c:10981)
  File "renpy/style.pyx", line 481, in renpy.style.StyleCore._get (gen\renpy.style.c:7566)
    build_style(self)
  File "renpy/style.pyx", line 695, in renpy.style.build_style (gen\renpy.style.c:10841)
    raise
  File "renpy/style.pyx", line 692, in renpy.style.build_style (gen\renpy.style.c:10723)
    pfw.function(s.cache, cache_priorities, priority, v)
  File "gen/style_functions.pyx", line 731, in style_functions.color_property (gen\renpy.styledata.style_functions.c:7611)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\color.py", line 156, in __new__
    raise Exception("Color string must be 3, 4, 6, or 8 hex digits long.")
Exception: Color string must be 3, 4, 6, or 8 hex digits long.
Bootstrap to the start of init.init took 1196.07s
Early init took 0.01s
Loader init took 0.50s
Loading error handling took 0.15s
Loading script took 5.35s
Loading persistent took 0.16s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.35s
Loading analysis data took 0.06s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.30s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.20s
Build styles took 0.03s
Load screen analysis took 0.00s
Analyze screens took 0.04s
Save screen analysis took 0.18s
Prepare screens took 0.14s
Save pyanalysis. took 0.00s
Save bytecode. took 0.11s
Running _start took 0.01s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 1204.7329998s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.034000 seconds.
- Frame drawn at 0.094000 seconds.
- Frame drawn at 0.107000 seconds.
- Frame drawn at 0.125000 seconds.
- 0.125000 seconds to render 5 frames.
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 612, in execute
    say_menu_with(self.with_, renpy.game.interface.set_transition)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 473, in say_menu_with
    what = renpy.python.py_eval(expression)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 1749, in py_eval
    return py_eval_bytecode(code, globals, locals)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 1743, in py_eval_bytecode
    return eval(bytecode, globals, locals)
  File "game/script.rpy", line 1169, in <module>
    u "SCRAM!" with hpunch(1.)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\curry.py", line 38, in __call__
    **dict(self.kwargs.items() + kwargs.items()))
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\motion.py", line 304, in Move
    **properties)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\motion.py", line 98, in __init__
    self.add(child)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 160, in add
    child = renpy.easy.displayable(d)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\easy.py", line 108, in displayable
    raise Exception("Not a displayable: %r" % (d,))
Exception: Not a displayable: 1.0
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
The window was minimized.
The window was restored.

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Bootstrap to the start of init.init took 1518.13s
Early init took 0.01s
Loader init took 0.32s
Loading error handling took 0.12s
Loading script took 3.48s
Loading persistent took 0.09s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.14s
Loading analysis data took 0.02s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.11s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.09s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.04s
Save screen analysis took 0.12s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.09s
Running _start took 0.01s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Ignored error at start of testing: 501
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 1523.69199991s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.021000 seconds.
- Frame drawn at 0.056000 seconds.
- Frame drawn at 0.067000 seconds.
- Frame drawn at 0.085000 seconds.
- 0.085000 seconds to render 5 frames.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 613, in execute
    renpy.exports.say(who, what, interact=self.interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\exports.py", line 1147, in say
    who(what, interact=interact)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 877, in __call__
    self.do_display(who, what, cb_args=self.cb_args, **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 716, in do_display
    **display_args)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\character.py", line 508, in display_say
    rv = renpy.ui.interact(mouse='say', type=type, roll_forward=roll_forward)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ui.py", line 285, in interact
    rv = renpy.game.interface.interact(roll_forward=roll_forward, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2526, in interact
    repeat, rv = self.interact_core(preloads=preloads, trans_pause=trans_pause, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 2883, in interact_core
    self.draw_screen(root_widget, fullscreen_video, (not fullscreen_video) or video_frame_drawn)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1955, in draw_screen
    renpy.config.screen_height,
  File "renpy/display/render.pyx", line 427, in renpy.display.render.render_screen (gen\renpy.display.render.c:6806)
    rv = render(root, width, height, 0, 0)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\screen.py", line 623, in render
    child = renpy.display.render.render(self.child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\layout.py", line 693, in render
    surf = render(child, width, height, cst, cat)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "renpy/display/accelerator.pyx", line 108, in renpy.display.accelerator.transform_render (gen\renpy.display.accelerator.c:2027)
    cr = render(child, widtho, heighto, st - self.child_st_base, at)
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 387, in render
    return wrap_render(self.target, width, height, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\image.py", line 208, in wrap_render
    rend = render(child, w, h, st, at)
  File "renpy/display/render.pyx", line 110, in renpy.display.render.render (gen\renpy.display.render.c:3440)
    cpdef render(d, object widtho, object heighto, double st, double at):
  File "renpy/display/render.pyx", line 196, in renpy.display.render.render (gen\renpy.display.render.c:2978)
    rv = d.render(widtho, heighto, st, at)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 473, in render
    im = cache.get(self)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 200, in get
    surf = image.load()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\im.py", line 524, in load
    surf = renpy.display.pgrender.load_image(renpy.loader.load(self.filename), self.filename)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\loader.py", line 543, in load
    raise IOError("Couldn't find file '%s'." % name)
IOError: Couldn't find file 'characters/rui/side/side_eee rui.png'.
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\execution.py", line 438, in run
    node.execute()
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 1706, in execute
    self.call("execute")
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\ast.py", line 1724, in call
    return renpy.statements.call(method, parsed, *args, **kwargs)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\statements.py", line 145, in call
    return method(parsed, *args, **kwargs)
  File "renpy/common/000statements.rpy", line 243, in execute_play_sound
    renpy.sound.play(_audio_eval(p["file"]),
  File "renpy/common/000statements.rpy", line 32, in _audio_eval
    return eval(expr, locals=store.audio.__dict__)
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 1748, in py_eval
    code = py_compile(code, 'eval')
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\python.py", line 584, in py_compile
    raise e
  File "game/script.rpy", line 1
    (door open.mp3)
             ^
SyntaxError: invalid syntax
Bootstrap to the start of init.init took 1852.60s
Early init took 0.01s
Loader init took 0.47s
Loading error handling took 0.13s
Loading script took 4.22s
Loading persistent took 0.13s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.30s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\trang.pham\\AppData\\Roaming/RenPy/backups\\Both Sides of a Coin':
Dump and make backups. took 0.23s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.16s
Build styles took 0.02s
Load screen analysis took 0.00s
Analyze screens took 0.03s
Save screen analysis took 0.15s
Prepare screens took 0.17s
Save pyanalysis. took 0.00s
Save bytecode. took 0.09s
Running _start took 0.01s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "C:\Users\trang.pham\Documents\OneDrive for Business\12 grade\summer assignment\girlswhocode\renpy-6.99.12.4-sdk\renpy\display\core.py", line 1810, in make_draw
    __import__(mod)
ImportError: DLL load failed: The specified module could not be found.
Unknown renderer: angle

primary display bounds: (0, 0, 1920, 1080)
Windowed mode.
Screen sizes: virtual=(1144, 675) physical=(1658, 978) drawable=(1658, 978)
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5500'
Version: '4.4.0 - Build 20.19.15.4501'
Display Info: <Info({'blit_sw_CC': False, 'refresh_rate': 60, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1080, 'current_w': 1920, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 16384
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 1859.88499999s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.048000 seconds.
- Frame drawn at 0.096000 seconds.
- Frame drawn at 0.111000 seconds.
- Frame drawn at 0.127000 seconds.
- 0.127000 seconds to render 5 frames.
Cleaning stores took 0.00s
Init translation took 0.50s
Build styles took 0.04s
Load screen analysis took 0.03s
Analyze screens took 0.00s
Prepare screens took 0.00s
Running _start took 0.00s
